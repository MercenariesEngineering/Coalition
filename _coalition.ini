
[server]
# Server configuration

# Type of database to use. "sqlite" for a file based database, "mysql" for an external mysql server.
#db_type=sqlite

# The sqlite database file
#db_sqlite_file=coalition.db

# The mysql server
#db_mysql_host=127.0.0.1
#db_mysql_user=
#db_mysql_password=
#db_mysql_base=base
#db_mysql_install=1

# Server port (default is 19211)
#port=19211

# Server mode [normal|aws|gcloud] (default is normal)
#  If cloud mode is selected (all but "normal"), the corresponding
#  configuration file has to be edited.
#  eg. the file "aws_cloud.ini" for servermode="aws".
servermode=normal

# Worker time out in seconds, time lapse after a worker missing heartbeats is considered out (default is 10)
#timeout=10

# Run the server as service (Windows only)
#service=1

# Display verbose logs
#verbose=0

# Notify the user after the N first children jobs have been finished. 0 disables this notification.
#notifyafter=10

# Decrease the priority of a parent job after N errors.
#decreasepriorityafter=10

# SMTP server hostname, emails disabled if empty
#smtphost=

# SMTP server port 
#smtpport=587

# SMTP use a TLS connection
#smtptls=1

# SMTP sender email
#smtpsender=

# SMTP server login, no authentification if empty
#smtplogin=

# SMTP server password, no authentification if empty
#smtppasswd=

# LDAP server to use for authentication
# If not empty, coalition will requier a login and a password at every requests
#ldaphost=

# LDAP template used to validate the user, like uid=__login__,ou=people,dc=exemple,dc=com
# __login__ will be replaced by the user login
#ldaptemplate=

# In LDAP mode, list if the trusted users who don t need a password
#trustedusers=trustedUser1
# trustedUser2
# trustedUser3

# Command while list. The command white list can be global or per user.
#commandwhitelist=global command1 regexp
# global command2 regexp
# @user1
# user1 command1 regexp
# user1 command2 regexp
# @user2
# user2 command1 regexp
# user2 command2 regexp

# Command while list. The command white list can be global or per user.
#commandwhitelist=global command1 regexp

[worker]
# Worker configuration

# Server URL, like http://serverhost:19211, let it blank to use autodetection by broadcasting.
#serverUrl=

# Number of simultaneous workers on this system (default is 1)
#workers=1

# Worker name (default is host name)
#name=MyWorker

# Sleep time between two heartbeats in seconds (default is 2)
#sleep=2

# Maximum number of cpus per worker, will override the number of workers when defined (Windows only)
#cpus=None

# Command to execute at worker startup
#startup=

# Display verbose logs
#verbose=0

# Customize the command used to run the job.
#
# The command set in runcommand is responsible for :
# * changing the user
# * changing the working directory
# * run the job command with the current environment
#
# The following pattern will be replaced:
# __user__ : the job user name
# __dir__ : the job directory
# __cmd__ : the job command
#
# If runcommand is blank, the worker set the working directory to the job directory
# and run the command using the worker permissions.

# Default run command
#runcommand=

# Run the jobs using sudo
#runcommand=sudo -u __user__ -E -- sh -c 'cd __dir__; __cmd__'

# Workers log file
#logfile=./worker.log

